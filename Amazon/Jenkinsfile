pipeline {
    agent any

    tools {
        maven 'Maven3'   // Make sure "Maven3" is configured in Jenkins Global Tools
    }

    environment {
        SONAR_TOKEN = credentials('sonarqube-k')   // Jenkins credential for SonarQube token
    }

    stages {

        stage('Build WAR with Maven') {
            steps {
                dir('Amazon/Amazon-Core') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('Amazon/Amazon-Core') {
                    withSonarQubeEnv('sonarqube') {   // "sonarqube" must match Jenkins SonarQube server config name
                        sh '''
                            mvn sonar:sonar \
                            -Dsonar.projectKey=devops_git \
                            -Dsonar.host.url=http://localhost:9000 \
                            -Dsonar.login=$SONAR_TOKEN
                        '''
                    }
                }
            }
        }

        stage('Check Quality Gate') {
            steps {
                script {
                    sleep(time: 10, unit: 'SECONDS')   // give Sonar a few seconds to process
                    def response = sh(
                        script: """curl -s -u $SONAR_TOKEN: "http://localhost:9000/api/qualitygates/project_status?projectKey=devops_git" """,
                        returnStdout: true
                    ).trim()
                    echo "SonarQube Response: ${response}"
                    if (!response.contains('"status":"OK"')) {
                        error "❌ Quality Gate failed!"
                    } else {
                        echo "✅ Quality Gate passed!"
                    }
                }
            }
        }

        stage('Deploy with Ansible') {
            steps {
                dir('Amazon/ansible') {
                    sh 'ansible-playbook -i inventory.ini playbook.yml'
                }
            }
        }
    }
}

