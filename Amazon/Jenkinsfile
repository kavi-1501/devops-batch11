pipeline {
    agent any

    tools {
        maven 'Maven3'   // Make sure "Maven3" is configured in Jenkins Global Tools
    }

    environment {
        SONAR_TOKEN = credentials('sonarqube-k')   // Jenkins credential for SonarQube token
        SONAR_URL   = "http://localhost:9000"
    }

    stages {

        stage('Build Core Module') {
            steps {
                dir('Amazon/Amazon-Core') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Web Module') {
            steps {
                dir('Amazon/Amazon-Web') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('Amazon/Amazon-Core') {
                    withSonarQubeEnv('sonarqube') {
                        sh """
                            mvn sonar:sonar \
                            -Dsonar.projectKey=devops_git \
                            -Dsonar.host.url=$SONAR_URL \
                            -Dsonar.login=$SONAR_TOKEN
                        """
                    }
                }
            }
        }

        stage('Check Quality Gate') {
            steps {
                script {
                    // Poll SonarQube until Quality Gate is ready
                    timeout(time: 2, unit: 'MINUTES') {
                        waitUntil {
                            def response = sh(
                                script: """curl -s -u $SONAR_TOKEN: $SONAR_URL/api/qualitygates/project_status?projectKey=devops_git""",
                                returnStdout: true
                            ).trim()
                            echo "SonarQube Response: ${response}"
                            def status = response.contains('"status":"OK"')
                            return status
                        }
                    }
                    echo "âœ… Quality Gate passed!"
                }
            }
        }

        stage('Deploy with Ansible') {
            steps {
                dir('Amazon/ansible') {
                    sh 'ansible-playbook -i inventory.ini playbook.yml'
                }
            }
        }
    }
}
